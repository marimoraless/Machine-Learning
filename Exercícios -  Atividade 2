EXERCICIO 1 - ATIVIDADE 2: 

import cv2

def imprimir_info(img):
    altura, largura, canais = img.shape
    tipo_de_dado = img.dtype
    tom_de_cinza_max = 255 if tipo_de_dado == "uint8" else 65535
    tom_de_cinza_medio = int(0.5 * tom_de_cinza_max)
    tom_de_cinza_min = 0

    print("Informações da imagem:")
    print(f"- Altura: {altura}")
    print(f"- Largura: {largura}")
    print(f"- Canais de cor: {canais}")
    print(f"- Tipo de dado: {tipo_de_dado}")
    print(f"- Tom de cinza máximo: {tom_de_cinza_max}")
    print(f"- Tom de cinza médio: {tom_de_cinza_medio}")
    print(f"- Tom de cinza mínimo: {tom_de_cinza_min}")

caminho_da_imagem = ('./imagens/mll.imagem.jpg')

img = cv2.imread(caminho_da_imagem)
imprimir_info(img)




EXERCICIO 2 - ATIVIDADE 2: 

import cv2 as cv
import matplotlib.pyplot as plt

#filtro media:
img = cv.imread('./imagens/mll.imagem.jpg')
img = cv.cvtColor(img,cv.COLOR_BGR2RGB)
mean_img = cv.blur(img,(9,9))

plt.imshow(mean_img)
plt.show()


#filtro mediana:
img = cv.imread('./imagens/mll.imagem.jpg')

img_median = cv.medianBlur(img, 5)

plt.subplot(121), plt.imshow(cv.cvtColor(img, cv.COLOR_BGR2RGB))
plt.title('Imagem original')
plt.xticks([]), plt.yticks([])

plt.subplot(122), plt.imshow(cv.cvtColor(img_median, cv.COLOR_BGR2RGB))
plt.title('Imagem com filtro Mediana')
plt.xticks([]), plt.yticks([])

plt.show()

#filtro mediana
import cv2 as cv
import matplotlib.pyplot as plt

img = cv.imread('./imagens/mll.imagem.jpg')

img_median = cv.medianBlur(img, 5)

plt.imshow(cv.cvtColor(img_median, cv.COLOR_BGR2RGB))
plt.title('Imagem Mediana')
plt.xticks([]), plt.yticks([])

plt.show()


#filtro gaussiano
import cv2
from matplotlib import pyplot as plt

img = cv.imread('./imagens/mll.imagem.jpg')


img_gaussian = cv2.GaussianBlur(img, (9,9), 0)


plt.subplot(121), plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
plt.title('Imagem original')
plt.xticks([]), plt.yticks([])

plt.subplot(122), plt.imshow(cv2.cvtColor(img_gaussian, cv2.COLOR_BGR2RGB))
plt.title('Imagem com filtro Gaussiano')
plt.xticks([]), plt.yticks([])

plt.show()
